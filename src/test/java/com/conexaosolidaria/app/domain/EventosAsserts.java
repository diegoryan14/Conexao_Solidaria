package com.conexaosolidaria.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EventosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventosAllPropertiesEquals(Eventos expected, Eventos actual) {
        assertEventosAutoGeneratedPropertiesEquals(expected, actual);
        assertEventosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventosAllUpdatablePropertiesEquals(Eventos expected, Eventos actual) {
        assertEventosUpdatableFieldsEquals(expected, actual);
        assertEventosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventosAutoGeneratedPropertiesEquals(Eventos expected, Eventos actual) {
        assertThat(expected)
            .as("Verify Eventos auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventosUpdatableFieldsEquals(Eventos expected, Eventos actual) {
        assertThat(expected)
            .as("Verify Eventos relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getDataCadastro()).as("check dataCadastro").isEqualTo(actual.getDataCadastro()))
            .satisfies(e -> assertThat(e.getDataEvento()).as("check dataEvento").isEqualTo(actual.getDataEvento()))
            .satisfies(e -> assertThat(e.getHoraInicio()).as("check horaInicio").isEqualTo(actual.getHoraInicio()))
            .satisfies(e -> assertThat(e.getHoraTermino()).as("check horaTermino").isEqualTo(actual.getHoraTermino()))
            .satisfies(e -> assertThat(e.getObservacao()).as("check observacao").isEqualTo(actual.getObservacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEventosUpdatableRelationshipsEquals(Eventos expected, Eventos actual) {}
}
